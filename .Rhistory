knitr::opts_chunk$set(echo = TRUE)
options(scipen = 10)
# Starting collection for data science
library(tidyverse)
install.packages("tidyverse")
# Starting collection for data science
library(tidyverse)
# Processing string
library(glue)
# Processing date data type
library(lubridate)
# Multivariate Data Analyses
library(factoextra)
install.packages("factoextra")
library(factoextra)
# Multivariate Data Analyses
library(FactoMineR)
# Data visualization
library(ggplot2)
library(viridis)
library(GGally)
library(scales)
spotify <- read_csv("spotify.csv")
glimpse(spotify)
colSums(is.na(spotify))
spotify <- omit.na(spotify)
spotify <- na.omit(spotify)
colSums(is.na(spotify))
str(spotify)
spotify <- spotify  %>%
mutate(genre = as.factor(genre),
key = as.factor(key),
genre = as.factor(str_replace_all(genre, "[[:punct:]]", "")),
mode = as.factor(mode))
summary(spotify)
spotify <- spotify %>%
select(-c(track_id,time_signature,track_name))
genre_popularity <- spotify %>% select(popularity, genre) %>% group_by(genre) %>% summarise("average_popularity" = round(mean(popularity)))
ggplot(data=genre_popularity, mapping = aes(x = reorder(genre,average_popularity), y = average_popularity, fill = genre)) +
geom_col() +
coord_flip() +
theme_grey() +
theme(
legend.position = "none",
) +
labs(
y = "Average Popularity",
x = "Genre"
)
# Filter
spotify <- spotify %>% filter(genre == "Pop" | genre == "Rap" | genre == "Rock" | genre == "HipHop" | genre == "Dance")
# Total row
NROW(tracks)
# Filter
spotify <- spotify %>% filter(genre == "Pop" | genre == "Rap" | genre == "Rock" | genre == "HipHop" | genre == "Dance")
# Total row
NROW(spotify)
hist(spotify$popularity)
spotify %>%
ggplot(aes(x = key, y = popularity, fill = key)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
theme_minimal()
spotify %>%
ggplot(aes(x = genre, y = popularity, fill = genre)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
theme_minimal()
ggcorr(spotify, low = "maroon", high = "black")
ggcorr(spotify, low = "red", high = "maroon")
set.seed(100)
spotify_sample <- sample_n(spotify, (nrow(spotify) * 0.05))
NROW(spotify_sample)
hist(spotify_sample$popularity)
spotify_num <- spotify_sample %>% select(-c(genre,artist_name,key,mode))
str(spotify_num)
spotify_scale <- scale(spotify_num)
head(spotify_scale)
fviz_nbclust(spotify_num, kmeans, method = "wss", k.max = 10) +
scale_y_continuous(labels = number_format(scale = 10^(-9), big.mark = ",", suffix = " bil.")) +
labs(subtitle = "Elbow method")
fviz_nbclust(spotify_num, kmeans, method = "silhouette", k.max = 10)
fviz_nbclust(spotify_num, kmeans, "gap_stat", k.max = 10) + labs(subtitle = "Gap Statistic method")
set.seed(100)
km_spotify <-kmeans(spotify_scale, centers = 2)
km_spotify
spotify_sample$cluster <- as.factor(km_spotify$cluster)
head(spotify_sample)
spotify_sample %>%
select(cluster, popularity) %>%
group_by(cluster) %>%
summarise_all("mean")
spotify_sample %>% ggplot(aes(x = cluster, y = popularity, fill = cluster)) +
geom_boxplot() +
theme_grey()
spotify_sample %>%
select(cluster, genre) %>%
group_by(genre, cluster) %>%
summarize(n = n()) %>%
ungroup() %>%
spread(genre, n, fill=0)
spotify_sample %>% ggplot(aes(x = cluster, y = acousticness, fill = cluster)) +
geom_boxplot() +
theme_grey()
spotify_sample %>%
select_if(is.numeric) %>%
mutate(cluster = as.factor(km_spotify$cluster)) %>%
group_by(cluster) %>%
summarise_all("mean")
non_numeric <- which(sapply(spotify_sample, negate(is.numeric)))
spotify_pca <- PCA(spotify_sample,
scale.unit = T,
quali.sup = non_numeric,
graph = F,
ncp = 11)
summary(spotify_pca)
summary('spotify_pca')
non_numeric <- which(sapply(spotify_sample, negate(is.numeric)))
spotify_pca <- PCA(spotify_sample,
scale.unit = T,
quali.sup = non_numeric,
graph = F,
ncp = 11)
summary('spotify_pca')
fviz_eig(spotify_pca, ncp = 11, addlabels = T, main = "Variance Explained by Dimensions")
spotify_pca_min <- data.frame(spotify_pca$ind$coord[ ,1:8]) %>%
bind_cols(cluster = as.factor(spotify_sample$cluster))
head(spotify_pca_min)
pca_dimdesc<-dimdesc(spotify_pca)
pca_dimdesc$Dim.1$quanti
pca_dimdesc<-dimdesc('spotify_pca')
fviz_cluster(object = km_spotify, data = spotify_scale) +
theme_grey()
fviz_pca_var(spotify_pca) +
theme_grey()
fviz_pca_ind(spotify_pca, habillage = 1)
pca_dimdesc<-dimdesc(spotify_pca)
